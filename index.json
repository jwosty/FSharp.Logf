[{"uri":"/FSharp.Logf/reference/fsharp.html","title":"FSharp","content":"Logf"},{"uri":"/FSharp.Logf/reference/fsharp-logf-expecto.html","title":"FSharp.Logf.Expecto","content":"Extensions \nExpectoMsLoggerAdapter"},{"uri":"/FSharp.Logf/reference/fsharp-logf-suave.html","title":"FSharp.Logf.Suave","content":"Extensions \nMsSuaveLoggerAdapter"},{"uri":"/FSharp.Logf/reference/fable-fsharp.html","title":"Fable.FSharp","content":"Logf"},{"uri":"/FSharp.Logf/reference/fable-microsoft-extensions-logging.html","title":"Fable.Microsoft.Extensions.Logging","content":"ConsoleLogger \nEventId \nILogger \nLogLevel"},{"uri":"/FSharp.Logf/reference/fsharp-logf.html","title":"Logf","content":"Logf \n\u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html\u0022\u003EPrintf\u003C/a\u003E style\n     formatting for \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E objects, with optional structured logging\n     support. \n  \n\n     All functions in this module support format specifiers implemented by FSharp.Core printf functions. Named\n     parameters for structured loggers are specified in curly braces immediately after the format specifier. For\n     example, the format string \u0022Hello, %s{user}!\u0022 would give the string argument \u0022user\u0022 in a structured logger.\n     Parameter name specifiers are simply ignored by non-structured loggers.\n  \nLogf.logf \nlogf \nLogf.elogf \nelogf \nLogf.logft \nlogft \nLogf.logfd \nlogfd \nLogf.logfi \nlogfi \nLogf.logfw \nlogfw \nLogf.elogfw \nelogfw \nLogf.logfe \nlogfe \nLogf.elogfe \nelogfe \nLogf.logfc \nlogfc \nLogf.elogfc \nelogfc"},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#logf","title":"Logf.logf","content":"Logf.logf \nlogf \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at the specified\n     \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel\u0022\u003ELogLevel\u003C/a\u003E.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#elogf","title":"Logf.elogf","content":"Logf.elogf \nelogf \n\n     Formatted error printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at the specified\n     \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel\u0022\u003ELogLevel\u003C/a\u003E.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#logft","title":"Logf.logft","content":"Logf.logft \nlogft \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Trace level.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#logfd","title":"Logf.logfd","content":"Logf.logfd \nlogfd \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Debug level.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#logfi","title":"Logf.logfi","content":"Logf.logfi \nlogfi \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Information level.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#logfw","title":"Logf.logfw","content":"Logf.logfw \nlogfw \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Warning level.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#elogfw","title":"Logf.elogfw","content":"Logf.elogfw \nelogfw \n\n     Formatted error printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Warning level.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#logfe","title":"Logf.logfe","content":"Logf.logfe \nlogfe \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Error level.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#elogfe","title":"Logf.elogfe","content":"Logf.elogfe \nelogfe \n\n     Formatted error printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Error level.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#logfc","title":"Logf.logfc","content":"Logf.logfc \nlogfc \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Critical level.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf.html#elogfc","title":"Logf.elogfc","content":"Logf.elogfc \nelogfc \n\n     Formatted error printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Critical level.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf-expecto-extensions.html","title":"Extensions","content":"Extensions \n\n     Extension methods for Expecto \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/expecto.logging.logger\u0022\u003ELogger\u003C/a\u003E objects.\n  \nExtensions.AsMsLogger \nAsMsLogger"},{"uri":"/FSharp.Logf/reference/fsharp-logf-expecto-extensions.html#AsMsLogger","title":"Extensions.AsMsLogger","content":"Extensions.AsMsLogger \nAsMsLogger \n\n     Turns an Expecto \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/expecto.logging.logger\u0022\u003ELogger\u003C/a\u003E into a Microsoft\n     \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf-expecto-expectomsloggeradapter.html","title":"ExpectoMsLoggerAdapter","content":"ExpectoMsLoggerAdapter \n\n     Adapts an Expecto \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/expecto.logging.logger\u0022\u003ELogger\u003C/a\u003E to the Microsoft\n     \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E interface.\n  \nExpectoMsLoggerAdapter.( .ctor ) \n( .ctor )"},{"uri":"/FSharp.Logf/reference/fsharp-logf-expecto-expectomsloggeradapter.html#( .ctor )","title":"ExpectoMsLoggerAdapter.( .ctor )","content":"ExpectoMsLoggerAdapter.( .ctor ) \n( .ctor ) \n"},{"uri":"/FSharp.Logf/reference/fsharp-logf-suave-extensions.html","title":"Extensions","content":"Extensions \n\n     Extension methods for Suave \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/suave.logging.logger\u0022\u003ELogger\u003C/a\u003E objects.\n  \nExtensions.AsSuaveLogger \nAsSuaveLogger"},{"uri":"/FSharp.Logf/reference/fsharp-logf-suave-extensions.html#AsSuaveLogger","title":"Extensions.AsSuaveLogger","content":"Extensions.AsSuaveLogger \nAsSuaveLogger \n\n     Turns a Suave \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/expecto.logging.logger\u0022\u003ELogger\u003C/a\u003E into a Microsoft\n     \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E.\n "},{"uri":"/FSharp.Logf/reference/fsharp-logf-suave-mssuaveloggeradapter.html","title":"MsSuaveLoggerAdapter","content":"MsSuaveLoggerAdapter \n\n     Adapts a Microsoft \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E to the Suave\n     \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/suave.logging.logger\u0022\u003ELogger\u003C/a\u003E interface.\n  \nMsSuaveLoggerAdapter.( .ctor ) \n( .ctor )"},{"uri":"/FSharp.Logf/reference/fsharp-logf-suave-mssuaveloggeradapter.html#( .ctor )","title":"MsSuaveLoggerAdapter.( .ctor )","content":"MsSuaveLoggerAdapter.( .ctor ) \n( .ctor ) \n"},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html","title":"Logf","content":"Logf \n\u003Ca href=\u0022https://fsharp.github.io/fsharp-core-docs/reference/fsharp-core-printfmodule.html\u0022\u003EPrintf\u003C/a\u003E style\n     formatting for \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E objects, with optional structured logging\n     support. \n  \n\n     All functions in this module support format specifiers implemented by FSharp.Core printf functions. Named\n     parameters for structured loggers are specified in curly braces immediately after the format specifier. For\n     example, the format string \u0022Hello, %s{user}!\u0022 would give the string argument \u0022user\u0022 in a structured logger.\n     Parameter name specifiers are simply ignored by non-structured loggers.\n  \nLogf.logf \nlogf \nLogf.elogf \nelogf \nLogf.logft \nlogft \nLogf.logfd \nlogfd \nLogf.logfi \nlogfi \nLogf.logfw \nlogfw \nLogf.elogfw \nelogfw \nLogf.logfe \nlogfe \nLogf.elogfe \nelogfe \nLogf.logfc \nlogfc \nLogf.elogfc \nelogfc"},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#logf","title":"Logf.logf","content":"Logf.logf \nlogf \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at the specified\n     \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel\u0022\u003ELogLevel\u003C/a\u003E.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#elogf","title":"Logf.elogf","content":"Logf.elogf \nelogf \n\n     Formatted error printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at the specified\n     \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel\u0022\u003ELogLevel\u003C/a\u003E.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#logft","title":"Logf.logft","content":"Logf.logft \nlogft \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Trace level.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#logfd","title":"Logf.logfd","content":"Logf.logfd \nlogfd \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Debug level.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#logfi","title":"Logf.logfi","content":"Logf.logfi \nlogfi \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Information level.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#logfw","title":"Logf.logfw","content":"Logf.logfw \nlogfw \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Warning level.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#elogfw","title":"Logf.elogfw","content":"Logf.elogfw \nelogfw \n\n     Formatted error printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Warning level.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#logfe","title":"Logf.logfe","content":"Logf.logfe \nlogfe \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Error level.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#elogfe","title":"Logf.elogfe","content":"Logf.elogfe \nelogfe \n\n     Formatted error printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Error level.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#logfc","title":"Logf.logfc","content":"Logf.logfc \nlogfc \n\n     Formatted printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Critical level.\n "},{"uri":"/FSharp.Logf/reference/fable-fsharp-logf.html#elogfc","title":"Logf.elogfc","content":"Logf.elogfc \nelogfc \n\n     Formatted error printing to an \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E at Critical level.\n "},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-consolelogger.html","title":"ConsoleLogger","content":"ConsoleLogger \n\n     A logging provider which outputs to the Javascript console object for Fable environments.\n  \nConsoleLogger.( .ctor ) \n( .ctor ) \nConsoleLogger.LogLevel \nLogLevel"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-consolelogger.html#( .ctor )","title":"ConsoleLogger.( .ctor )","content":"ConsoleLogger.( .ctor ) \n( .ctor ) \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-consolelogger.html#LogLevel","title":"ConsoleLogger.LogLevel","content":"ConsoleLogger.LogLevel \nLogLevel \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-eventid.html","title":"EventId","content":"EventId \n\n     Fable proxy of \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.eventid\u0022\u003EEventId\u003C/a\u003E.\n  \nEventId.( .ctor ) \n( .ctor ) \nEventId.( .ctor ) \n( .ctor ) \nEventId.Name \nName \nEventId.Id \nId"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-eventid.html#( .ctor )","title":"EventId.( .ctor )","content":"EventId.( .ctor ) \n( .ctor ) \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-eventid.html#( .ctor )","title":"EventId.( .ctor )","content":"EventId.( .ctor ) \n( .ctor ) \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-eventid.html#Name","title":"EventId.Name","content":"EventId.Name \nName \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-eventid.html#Id","title":"EventId.Id","content":"EventId.Id \nId \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-ilogger.html","title":"ILogger","content":"ILogger \n\n     Fable proxy of \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger\u0022\u003EILogger\u003C/a\u003E.\n  \nILogger.BeginScope \nBeginScope \nILogger.IsEnabled \nIsEnabled \nILogger.Log \nLog"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-ilogger.html#BeginScope","title":"ILogger.BeginScope","content":"ILogger.BeginScope \nBeginScope \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-ilogger.html#IsEnabled","title":"ILogger.IsEnabled","content":"ILogger.IsEnabled \nIsEnabled \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-ilogger.html#Log","title":"ILogger.Log","content":"ILogger.Log \nLog \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-loglevel.html","title":"LogLevel","content":"LogLevel \n\n     Fable proxy of \u003Ca href=\u0022https://docs.microsoft.com/dotnet/api/microsoft.extensions.logging.loglevel\u0022\u003ELogLevel\u003C/a\u003E.\n  \nLogLevel.Trace \nTrace \nLogLevel.Debug \nDebug \nLogLevel.Information \nInformation \nLogLevel.Warning \nWarning \nLogLevel.Error \nError \nLogLevel.Critical \nCritical \nLogLevel.None \nNone"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-loglevel.html#Trace","title":"LogLevel.Trace","content":"LogLevel.Trace \nTrace \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-loglevel.html#Debug","title":"LogLevel.Debug","content":"LogLevel.Debug \nDebug \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-loglevel.html#Information","title":"LogLevel.Information","content":"LogLevel.Information \nInformation \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-loglevel.html#Warning","title":"LogLevel.Warning","content":"LogLevel.Warning \nWarning \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-loglevel.html#Error","title":"LogLevel.Error","content":"LogLevel.Error \nError \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-loglevel.html#Critical","title":"LogLevel.Critical","content":"LogLevel.Critical \nCritical \n"},{"uri":"/FSharp.Logf/reference/fable-extensions-logging-loglevel.html#None","title":"LogLevel.None","content":"LogLevel.None \nNone \n"},{"uri":"/FSharp.Logf/index.html","title":"FSharp.Logf\n","content":"# FSharp.Logf\n\nThis library implements printf-style logging functions for any Microsoft.Extensions.Logging.ILogger, allowing you to log in an F# style with the full power of structured logging.\nHere\u0027s an example, adding logging to the snippet from https://learn.microsoft.com/en-us/dotnet/fsharp/tutorials/async#combine-asynchronous-computations:\n\n\u0060\u0060\u0060fsharp\n// Put this in a project and reference these packages: FSharp.Logf, Microsoft.Extensions.Logging, Microsoft.Extensions.Logging.Console\nopen System\nopen System.IO\nopen Microsoft.Extensions.Logging\nopen FSharp.Logf\n\n// Type annotation would be inferred if omitted (included here for clarity)\nlet printTotalFileBytes (ml: ILogger) path =\n    async {\n        try\n            let! bytes = File.ReadAllBytesAsync(path) |\u003E Async.AwaitTask\n            let fileName = Path.GetFileName(path)\n            // Log at information level, with fileName and bytesLength as the parameter names for any logging sinks\n            // supporting structured logging\n            logfi ml \u0022File %s{fileName} has %d{bytesLength} bytes\u0022 fileName bytes.Length\n        with e -\u003E \n            // Log at error level, setting an exception\n            elogfe ml e \u0022Exception accessing file: \u0027%s{path}\u0027\u0022 path\n    }\n\n[\u003CEntryPoint\u003E]\nlet main argv =\n    // Create a Microsoft-provided logger. Choose your favorite Logger provider (for example: Serilog, NLog, log4net)\n    let logger = LoggerFactory.Create(fun builder -\u003E builder.AddConsole().SetMinimumLevel(LogLevel.Debug) |\u003E ignore).CreateLogger()\n    \n    // Log at debug level. Since the NewLine argument doesn\u0027t have a parameter name right after it, it will be baked\n    // directly into the string. The argv argument, however, will be parameterized like the others.\n    logfd logger \u0022ARGV:%s%s{argv}\u0022 Environment.NewLine (\u0022[|\u0022 \u002B (argv |\u003E String.concat \u0022;\u0022) \u002B \u0022|]\u0022)\n\n    argv\n    |\u003E Seq.map (printTotalFileBytes logger)\n    |\u003E Async.Parallel\n    |\u003E Async.Ignore\n    |\u003E Async.RunSynchronously\n    \n    0\n\u0060\u0060\u0060\n\n## Fable compatability\n\nThis library is Fable-compatible. You can take advantage of this like so:\n\n\u0060\u0060\u0060fsharp\n#if !FABLE_COMPILER\nopen Microsoft.Extensions.Logging\nopen FSharp.Logf\n#else\nopen Fable.Microsoft.Extensions.Logging\nopen Fable.FSharp.Logf\n#endif\n\nlet ml =\n#if !FABLE_COMPILER\n    LoggerFactory.Create(fun builder -\u003E builder.AddConsole().SetMinimumLevel(LogLevel.Debug) |\u003E ignore)\n#else\n    ConsoleLogger()\n#endif\n\nlogfi ml \u0022Hello, %s{arg}!\u0022 \u0022world\u0022\n\u0060\u0060\u0060\n"}]